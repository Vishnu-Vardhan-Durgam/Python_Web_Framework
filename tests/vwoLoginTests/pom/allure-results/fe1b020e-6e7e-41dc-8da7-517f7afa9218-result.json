{"name": "test_vwologin_negative", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"login-username\"]\"}\n  (Session info: chrome=123.0.6312.86); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF7D5AD70C2+63090]\n\t(No symbol) [0x00007FF7D5A42D12]\n\t(No symbol) [0x00007FF7D58DEC65]\n\t(No symbol) [0x00007FF7D592499D]\n\t(No symbol) [0x00007FF7D5924ADC]\n\t(No symbol) [0x00007FF7D5965B37]\n\t(No symbol) [0x00007FF7D594701F]\n\t(No symbol) [0x00007FF7D5963412]\n\t(No symbol) [0x00007FF7D5946D83]\n\t(No symbol) [0x00007FF7D59183A8]\n\t(No symbol) [0x00007FF7D5919441]\n\tGetHandleVerifier [0x00007FF7D5ED262D+4238301]\n\tGetHandleVerifier [0x00007FF7D5F0F78D+4488509]\n\tGetHandleVerifier [0x00007FF7D5F07A6F+4456479]\n\tGetHandleVerifier [0x00007FF7D5BB0606+953270]\n\t(No symbol) [0x00007FF7D5A4E5DF]\n\t(No symbol) [0x00007FF7D5A492B4]\n\t(No symbol) [0x00007FF7D5A493EB]\n\t(No symbol) [0x00007FF7D5A39C24]\n\tBaseThreadInitThunk [0x00007FFD61037344+20]\n\tRtlUserThreadStart [0x00007FFD620626B1+33]", "trace": "self = <test_vwologin_pom2.TestLogin object at 0x000002BD7DE77500>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"717d1254e0405a1d8f71108976139459\")>\n\n    @allure.epic(\"VWO Login Test\")\n    @allure.feature(\"TC#1 --> VWO App Negative Test Case\")\n    @pytest.mark.usefixtures(\"setup\")\n    def test_vwologin_negative(self, setup):\n        driver = setup\n        # driver.get(self.base_url) # -->Optional to import from conftest\n        loginPage = LoginPage(driver)\n>       loginPage.login_to_vwo(user=\"admin\", pwd=\"admin\")\n\ntest_vwologin_pom2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\PageObjects\\loginPage.py:62: in login_to_vwo\n    self.get_username().send_keys(user)\n..\\..\\PageObjects\\loginPage.py:45: in get_username\n    return self.driver.find_element(*LoginPage.username)\n..\\..\\..\\..\\..\\Web_Automation2\\Python_Web_automation2\\WebFrameWork\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\..\\..\\..\\Web_Automation2\\Python_Web_automation2\\WebFrameWork\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002BD7DF4A360>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF7D5A39C24]\\\\n\\\\tBaseThreadInitThunk [0x00007FFD61037344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFD620626B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"login-username\"]\"}\nE         (Session info: chrome=123.0.6312.86); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7D5AD70C2+63090]\nE       \t(No symbol) [0x00007FF7D5A42D12]\nE       \t(No symbol) [0x00007FF7D58DEC65]\nE       \t(No symbol) [0x00007FF7D592499D]\nE       \t(No symbol) [0x00007FF7D5924ADC]\nE       \t(No symbol) [0x00007FF7D5965B37]\nE       \t(No symbol) [0x00007FF7D594701F]\nE       \t(No symbol) [0x00007FF7D5963412]\nE       \t(No symbol) [0x00007FF7D5946D83]\nE       \t(No symbol) [0x00007FF7D59183A8]\nE       \t(No symbol) [0x00007FF7D5919441]\nE       \tGetHandleVerifier [0x00007FF7D5ED262D+4238301]\nE       \tGetHandleVerifier [0x00007FF7D5F0F78D+4488509]\nE       \tGetHandleVerifier [0x00007FF7D5F07A6F+4456479]\nE       \tGetHandleVerifier [0x00007FF7D5BB0606+953270]\nE       \t(No symbol) [0x00007FF7D5A4E5DF]\nE       \t(No symbol) [0x00007FF7D5A492B4]\nE       \t(No symbol) [0x00007FF7D5A493EB]\nE       \t(No symbol) [0x00007FF7D5A39C24]\nE       \tBaseThreadInitThunk [0x00007FFD61037344+20]\nE       \tRtlUserThreadStart [0x00007FFD620626B1+33]\n\n..\\..\\..\\..\\..\\Web_Automation2\\Python_Web_automation2\\WebFrameWork\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "start": 1712056781936, "stop": 1712056781992, "uuid": "d5bba999-b0da-42da-9042-edf182f5fbe4", "historyId": "f096951b651eae6acffd8a17cf59c9e4", "testCaseId": "f096951b651eae6acffd8a17cf59c9e4", "fullName": "tests.vwoLoginTests.pom.test_vwologin_pom2.TestLogin#test_vwologin_negative", "labels": [{"name": "epic", "value": "VWO Login Test"}, {"name": "feature", "value": "TC#1 --> VWO App Negative Test Case"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "tests.vwoLoginTests.pom"}, {"name": "suite", "value": "test_vwologin_pom2"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "DESKTOP-T73FDRD"}, {"name": "thread", "value": "8952-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.vwoLoginTests.pom.test_vwologin_pom2"}]}